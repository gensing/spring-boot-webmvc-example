plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.tensing'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // spring boot web dependency
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // spring validation dependency
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // spring security dependency
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // websocket dependency
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // jpa dependency
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // redis dependency
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // spring data elasticsearch dependency
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    // yaml 자동완성 및 변수 매칭 기능, spring assistant plugin install 및 설정 필요 할수도 in idea
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

    // swagger dependencies ( boot 3 버전은 springdoc 2 버전 사용해야한다.)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.0.2'

    // logstash 전용 log 파일 생성을 위한 라이브러리
    implementation 'net.logstash.logback:logstash-logback-encoder:7.3'

    // jwt dependency
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // kafka dependency
    implementation 'org.springframework.kafka:spring-kafka'

    // mariadb dependency
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.2'

    // Querydsl dependencies - querydsl-apt : compile 시 @Entity 찾아 QClass 을 생성해 주는 라이브러리, compileJava 실행해서 생성
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // mapstruct dependencies - lombok 보다 위에 있어야 builder 사용
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0' // lombok v1.18.16+ 부터
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    // lombok dependencies
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // test dependency
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // test database dependency
    testImplementation 'com.h2database:h2:2.1.214'

    // test redis dependency
    testImplementation('it.ozimov:embedded-redis:0.7.3') { exclude group: "org.slf4j", module: "slf4j-simple" }
}

tasks.named('test') {
    useJUnitPlatform()
}

